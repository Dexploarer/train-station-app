var H=Object.defineProperty;var q=(t,s,e)=>s in t?H(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var U=(t,s,e)=>q(t,typeof s!="symbol"?s+"":s,e);import{r as f,P as A}from"./index-FKmzij_1.js";import{S as Q,v as $,a as k,U as D}from"./validation-Bq8tbDJB.js";import{o as M,n as T,s as g,e as F,a as O}from"./types-D9u2zvev.js";const N=M({title:g().min(1,"Event title is required").max(200,"Event title must not exceed 200 characters").trim(),description:g().max(2e3,"Description must not exceed 2000 characters").optional(),date:g().refine(t=>{const s=new Date(t),e=new Date;return e.setHours(0,0,0,0),s>=e},"Event date must be today or in the future"),startTime:g().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"Start time must be in HH:MM format"),endTime:g().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/,"End time must be in HH:MM format"),totalCapacity:T().int("Capacity must be a whole number").min(1,"Capacity must be at least 1").max(5e4,"Capacity cannot exceed 50,000"),ticketPrice:T().min(0,"Ticket price cannot be negative").max(1e4,"Ticket price cannot exceed $10,000").multipleOf(.01,"Price must be in cents (e.g., 19.99)"),artistIds:O(g().uuid("Invalid artist ID format")).optional().default([]),genre:g().max(50,"Genre must not exceed 50 characters").optional(),image:g().url("Image must be a valid URL").optional(),status:F(["upcoming","completed","cancelled"]).optional().default("upcoming")});N.refine(t=>{const[s,e]=t.startTime.split(":").map(Number),[r,a]=t.endTime.split(":").map(Number),l=s*60+e;return r*60+a>l},{message:"End time must be after start time",path:["endTime"]}).refine(t=>{const[s,e]=t.startTime.split(":").map(Number),[r,a]=t.endTime.split(":").map(Number),l=s*60+e,p=r*60+a-l;return p>=15&&p<=720},{message:"Event duration must be between 15 minutes and 12 hours",path:["endTime"]});const B=N.extend({ticketsSold:T().int("Tickets sold must be a whole number").min(0,"Tickets sold cannot be negative").optional().default(0)}).refine(t=>{const[s,e]=t.startTime.split(":").map(Number),[r,a]=t.endTime.split(":").map(Number),l=s*60+e;return r*60+a>l},{message:"End time must be after start time",path:["endTime"]}).refine(t=>{const[s,e]=t.startTime.split(":").map(Number),[r,a]=t.endTime.split(":").map(Number),l=s*60+e,p=r*60+a-l;return p>=15&&p<=720},{message:"Event duration must be between 15 minutes and 12 hours",path:["endTime"]}).refine(t=>(t.ticketsSold||0)<=t.totalCapacity,{message:"Tickets sold cannot exceed total capacity",path:["ticketsSold"]}),P=N.partial().extend({id:g().uuid("Invalid event ID format"),ticketsSold:T().int("Tickets sold must be a whole number").min(0,"Tickets sold cannot be negative").optional()}).refine(t=>t.ticketsSold!==void 0&&t.totalCapacity!==void 0?t.ticketsSold<=t.totalCapacity:!0,{message:"Tickets sold cannot exceed total capacity",path:["ticketsSold"]}).refine(t=>{if(t.startTime&&t.endTime){const[s,e]=t.startTime.split(":").map(Number),[r,a]=t.endTime.split(":").map(Number),l=s*60+e;return r*60+a>l}return!0},{message:"End time must be after start time",path:["endTime"]}),_=M({limit:T().int("Limit must be a whole number").min(1,"Limit must be at least 1").max(100,"Limit cannot exceed 100").optional().default(20),offset:T().int("Offset must be a whole number").min(0,"Offset cannot be negative").optional().default(0),status:F(["upcoming","completed","cancelled"]).optional(),genre:g().max(50,"Genre filter must not exceed 50 characters").optional(),artistId:g().uuid("Invalid artist ID format").optional(),dateFrom:g().refine(t=>!isNaN(Date.parse(t)),"Invalid date format").optional(),dateTo:g().refine(t=>!isNaN(Date.parse(t)),"Invalid date format").optional(),search:g().max(100,"Search term must not exceed 100 characters").optional()}).refine(t=>t.dateFrom&&t.dateTo?new Date(t.dateTo)>=new Date(t.dateFrom):!0,{message:"End date must be after or equal to start date",path:["dateTo"]}),C=M({id:g().uuid("Invalid event ID format")}),I={canCancel:t=>{const s=new Date(t.date),e=new Date;return t.status==="cancelled"?{valid:!1,reason:"Event is already cancelled"}:t.status==="completed"?{valid:!1,reason:"Cannot cancel a completed event"}:s<=e?{valid:!1,reason:"Cannot cancel an event that has already started"}:{valid:!0}},canSellTickets:(t,s)=>{if(t.status==="cancelled")return{valid:!1,reason:"Cannot sell tickets for a cancelled event"};if(t.status==="completed")return{valid:!1,reason:"Cannot sell tickets for a completed event"};const e=t.totalCapacity-t.ticketsSold;return s>e?{valid:!1,reason:`Only ${e} tickets available`}:{valid:!0}},canEdit:t=>t.status==="completed"?{valid:!1,reason:"Cannot edit a completed event"}:new Date(t.date)<=new Date&&t.status!=="cancelled"?{valid:!1,reason:"Cannot edit an event that has already started"}:{valid:!0}};class K{constructor(){U(this,"adapter");this.adapter=new Q}async getEvents(s={}){const e={limit:20,offset:0,...s},r=$(_,e);if(!r.success)return r.error;const{limit:a,offset:l,status:n,genre:p,artistId:y,dateFrom:h,dateTo:R,search:S}=r.data,x={select:`
        *,
        event_revenue(*),
        event_expenses(*)
      `,orderBy:{column:"date",ascending:!0},limit:a,offset:l,filters:{}};n&&(x.filters.status=n),p&&(x.filters.genre=p);const d=await this.adapter.executeQuery({tableName:"events",rateLimitKey:"events:read",enableLogging:!0},async()=>{const u=this.adapter.buildQuery("events",x);return S?u.or(`title.ilike.%${S}%, description.ilike.%${S}%`):u},"read");if(d.success){const v=(Array.isArray(d.data)?d.data:[d.data]).map(i=>this.transformEventFromDb(i));return{...d,data:v}}return d}async getEventById(s){const e=k(C,{id:s});if(!e.success)return e.error;const r=await this.adapter.executeQuery({tableName:"events",rateLimitKey:"events:read",enableLogging:!0},async()=>this.adapter.buildQuery("events",{select:`
            *,
            event_revenue(*),
            event_expenses(*)
          `,filters:{id:s}}),"read");return r.success?{...r,data:this.transformEventFromDb(r.data)}:r}async createEvent(s){const e=k(B,s);if(!e.success)return e.error;const r=e.data,a=await this.adapter.executeQuery({tableName:"events",requiredRole:D.MANAGER,rateLimitKey:"events:create",enableLogging:!0},async()=>{const l=this.adapter.toSnakeCase({title:r.title,description:r.description,date:r.date,startTime:r.startTime,endTime:r.endTime,totalCapacity:r.totalCapacity,ticketPrice:r.ticketPrice,artistIds:r.artistIds,ticketsSold:r.ticketsSold||0,genre:r.genre,image:r.image,status:r.status||"upcoming"});return this.adapter.buildQuery("events").insert([l]).select("*")},"write");if(a.success){const l=Array.isArray(a.data)?a.data:[a.data];return{...a,data:this.transformEventFromDb(l[0])}}return a}async updateEvent(s,e){const r=k(C,{id:s});if(!r.success)return r.error;const a=k(P.omit({id:!0}),e);if(!a.success)return a.error;const l=await this.getEventById(s);if(!l.success)return l;const n=l.data,p=I.canEdit(n);if(!p.valid)return{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/business-rule-violation",title:"Business Rule Violation",status:400,detail:p.reason||"Cannot edit this event",instance:`/api/events/${s}`,timestamp:new Date().toISOString()},meta:{requestId:crypto.randomUUID(),source:"validation"}};const y=await this.adapter.executeQuery({tableName:"events",requiredRole:D.MANAGER,rateLimitKey:"events:update",enableLogging:!0},async()=>{const h=this.adapter.toSnakeCase({...a.data,updated_at:new Date().toISOString()});return this.adapter.buildQuery("events").update(h).eq("id",s).select("*")},"write");if(y.success){const h=Array.isArray(y.data)?y.data:[y.data];return{...y,data:this.transformEventFromDb(h[0])}}return y}async cancelEvent(s,e){const r=k(C,{id:s});if(!r.success)return r.error;const a=await this.getEventById(s);if(!a.success)return a;const l=a.data,n=I.canCancel(l);return n.valid?this.updateEvent(s,{status:"cancelled"}):{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/business-rule-violation",title:"Cannot Cancel Event",status:400,detail:n.reason||"Event cannot be cancelled",instance:`/api/events/${s}/cancel`,timestamp:new Date().toISOString()},meta:{requestId:crypto.randomUUID(),source:"validation"}}}async deleteEvent(s){const e=k(C,{id:s});if(!e.success)return e.error;const r=await this.adapter.executeQuery({tableName:"events",requiredRole:D.ADMIN,rateLimitKey:"events:delete",enableLogging:!0},async()=>this.adapter.buildQuery("events").delete().eq("id",s),"write");return r.success?{...r,data:{deleted:!0}}:r}async sellTickets(s,e){const r=k(C,{id:s});if(!r.success)return r.error;if(!Number.isInteger(e)||e<=0)return{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/validation",title:"Invalid Ticket Quantity",status:400,detail:"Ticket quantity must be a positive integer",instance:`/api/events/${s}/tickets`,timestamp:new Date().toISOString()},meta:{requestId:crypto.randomUUID(),source:"validation"}};const a=await this.getEventById(s);if(!a.success)return a;const l=a.data,n=I.canSellTickets(l,e);if(!n.valid)return{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/business-rule-violation",title:"Cannot Sell Tickets",status:400,detail:n.reason||"Tickets cannot be sold for this event",instance:`/api/events/${s}/tickets`,timestamp:new Date().toISOString()},meta:{requestId:crypto.randomUUID(),source:"validation"}};const p=l.ticketsSold+e;return this.updateEvent(s,{ticketsSold:p})}transformEventFromDb(s){const e=this.adapter.toCamelCase(s);return{id:e.id,title:e.title,description:e.description||void 0,date:e.date,startTime:e.startTime,endTime:e.endTime,artistIds:e.artistIds||[],ticketsSold:e.ticketsSold||0,totalCapacity:e.totalCapacity,ticketPrice:e.ticketPrice,status:e.status,image:e.image||void 0,genre:e.genre||void 0,createdAt:e.createdAt,updatedAt:e.updatedAt,revenue:e.eventRevenue?{tickets:e.eventRevenue.tickets||0,bar:e.eventRevenue.bar||0,merchandise:e.eventRevenue.merchandise||0,other:e.eventRevenue.other||0}:void 0,expenses:e.eventExpenses?{artist:e.eventExpenses.artist||0,venue:e.eventExpenses.venue||0,marketing:e.eventExpenses.marketing||0,other:e.eventExpenses.other||0}:void 0,artists:e.artists?e.artists.map(r=>({id:r.id,name:r.name,genre:r.genre})):void 0}}}const w=new K,W=t=>{const[s,e]=f.useState(null),[r,a]=f.useState({isLoading:!0}),[l,n]=f.useState(null),p=f.useCallback(async()=>{var y;if(!t){n({type:"validation",message:"Event ID is required"}),a({isLoading:!1});return}a({isLoading:!0}),n(null);try{const h=await w.getEventById(t);h.success?(e(h.data),n(null)):n({type:"server",message:((y=h.error)==null?void 0:y.detail)||"Failed to fetch event",details:h.error})}catch(h){console.error("Error fetching event:",h),n({type:"network",message:"Network error occurred while fetching event",details:h})}finally{a({isLoading:!1})}},[t]);return f.useEffect(()=>{p();const y=A.channel(`event-${t}-changes`).on("postgres_changes",{event:"*",schema:"public",table:"events",filter:`id=eq.${t}`},()=>{p()}).subscribe();return()=>{y.unsubscribe()}},[p]),{event:s,loading:r,error:l,refetch:p}},J=t=>{const[s,e]=f.useState([]),[r,a]=f.useState({isLoading:!0}),[l,n]=f.useState(null),p=f.useCallback(async()=>{var d;a(u=>({...u,isLoading:!0})),n(null);try{const u=await w.getEvents(t);u.success?(e(u.data),n(null)):n({type:"server",message:((d=u.error)==null?void 0:d.detail)||"Failed to fetch events",details:u.error})}catch(u){console.error("Error fetching events:",u),n({type:"network",message:"Network error occurred while fetching events",details:u})}finally{a(u=>({...u,isLoading:!1}))}},[t]);f.useEffect(()=>{p();const d=A.channel("events-changes").on("postgres_changes",{event:"*",schema:"public",table:"events"},()=>{p()}).subscribe();return()=>{d.unsubscribe()}},[p]);const y=f.useCallback(async d=>{var u,v,i,o;a(c=>({...c,isCreating:!0})),n(null);try{const c=await w.createEvent(d);if(c.success)return e(m=>[c.data,...m]),{success:!0,event:c.data};{const m={type:((u=c.error)==null?void 0:u.status)===422?"validation":"server",message:((v=c.error)==null?void 0:v.detail)||"Failed to create event",details:c.error,fieldErrors:(o=(i=c.error)==null?void 0:i.errors)==null?void 0:o.reduce((b,E)=>({...b,[E.field]:E.message}),{})};return n(m),{success:!1,error:m}}}catch(c){console.error("Error creating event:",c);const m={type:"network",message:"Network error occurred while creating event",details:c};return n(m),{success:!1,error:m}}finally{a(c=>({...c,isCreating:!1}))}},[]),h=f.useCallback(async(d,u)=>{var v,i,o,c;a(m=>({...m,isUpdating:!0})),n(null);try{const m=await w.updateEvent(d,u);if(m.success)return e(b=>b.map(E=>E.id===d?m.data:E)),{success:!0,event:m.data};{const b={type:((v=m.error)==null?void 0:v.status)===422?"validation":"server",message:((i=m.error)==null?void 0:i.detail)||"Failed to update event",details:m.error,fieldErrors:(c=(o=m.error)==null?void 0:o.errors)==null?void 0:c.reduce((E,L)=>({...E,[L.field]:L.message}),{})};return n(b),{success:!1,error:b}}}catch(m){console.error("Error updating event:",m);const b={type:"network",message:"Network error occurred while updating event",details:m};return n(b),{success:!1,error:b}}finally{a(m=>({...m,isUpdating:!1}))}},[]),R=f.useCallback(async d=>{var u,v;a(i=>({...i,isDeleting:!0})),n(null);try{const i=await w.deleteEvent(d);if(i.success)return e(o=>o.filter(c=>c.id!==d)),{success:!0};{const o={type:((u=i.error)==null?void 0:u.status)===403?"authorization":"server",message:((v=i.error)==null?void 0:v.detail)||"Failed to delete event",details:i.error};return n(o),{success:!1,error:o}}}catch(i){console.error("Error deleting event:",i);const o={type:"network",message:"Network error occurred while deleting event",details:i};return n(o),{success:!1,error:o}}finally{a(i=>({...i,isDeleting:!1}))}},[]),S=f.useCallback(async(d,u)=>{var v;a(i=>({...i,isUpdating:!0})),n(null);try{const i=await w.cancelEvent(d,u);if(i.success)return e(o=>o.map(c=>c.id===d?i.data:c)),{success:!0,event:i.data};{const o={type:"server",message:((v=i.error)==null?void 0:v.detail)||"Failed to cancel event",details:i.error};return n(o),{success:!1,error:o}}}catch(i){console.error("Error cancelling event:",i);const o={type:"network",message:"Network error occurred while cancelling event",details:i};return n(o),{success:!1,error:o}}finally{a(i=>({...i,isUpdating:!1}))}},[]),x=f.useCallback(async(d,u)=>{var v,i;a(o=>({...o,isUpdating:!0})),n(null);try{const o=await w.sellTickets(d,u);if(o.success)return e(c=>c.map(m=>m.id===d?o.data:m)),{success:!0,event:o.data};{const c={type:((v=o.error)==null?void 0:v.status)===422?"validation":"server",message:((i=o.error)==null?void 0:i.detail)||"Failed to sell tickets",details:o.error};return n(c),{success:!1,error:c}}}catch(o){console.error("Error selling tickets:",o);const c={type:"network",message:"Network error occurred while selling tickets",details:o};return n(c),{success:!1,error:c}}finally{a(o=>({...o,isUpdating:!1}))}},[]);return{events:s,loading:r,error:l,createEvent:y,updateEvent:h,deleteEvent:R,cancelEvent:S,sellTickets:x,refetch:p,clearError:()=>n(null)}};export{W as a,J as u};
