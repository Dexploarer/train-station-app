var P=Object.defineProperty;var $=(s,t,e)=>t in s?P(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var d=(s,t,e)=>$(s,typeof t!="symbol"?t+"":t,e);import{P as R}from"./index-FKmzij_1.js";import{Z as K,s as r,o as c,e as y,c as O,b as g,n as h,r as b,d as S,a as M}from"./types-D9u2zvev.js";const F={VENUE_NOT_FOUND:{code:"VENUE_NOT_FOUND",title:"Venue Not Found",status:404,category:"not_found",message_template:"Venue not found",documentation_url:"https://docs.trainstation-dashboard.com/errors/venue-not-found"},EVENT_NOT_FOUND:{code:"EVENT_NOT_FOUND",title:"Event Not Found",status:404,category:"not_found",message_template:"Event not found"},ARTIST_NOT_FOUND:{code:"ARTIST_NOT_FOUND",title:"Artist Not Found",status:404,category:"not_found",message_template:"Artist not found"},CUSTOMER_NOT_FOUND:{code:"CUSTOMER_NOT_FOUND",title:"Customer Not Found",status:404,category:"not_found",message_template:"Customer not found"},INVALID_INPUT:{code:"INVALID_INPUT",title:"Invalid Input",status:422,category:"validation",message_template:"The request contains invalid data"},AUTHENTICATION_REQUIRED:{code:"AUTHENTICATION_REQUIRED",title:"Authentication Required",status:401,category:"authentication",message_template:"Authentication is required to access this resource"},INSUFFICIENT_PERMISSIONS:{code:"INSUFFICIENT_PERMISSIONS",title:"Insufficient Permissions",status:403,category:"authorization",message_template:"User lacks required permissions"},RATE_LIMIT_EXCEEDED:{code:"RATE_LIMIT_EXCEEDED",title:"Rate Limit Exceeded",status:429,category:"rate_limit",message_template:"Rate limit exceeded"},INTERNAL_SERVER_ERROR:{code:"INTERNAL_SERVER_ERROR",title:"Internal Server Error",status:500,category:"server_error",message_template:"An unexpected error occurred"},EXTERNAL_SERVICE_ERROR:{code:"EXTERNAL_SERVICE_ERROR",title:"External Service Error",status:502,category:"external_service",message_template:"External service is unavailable"}};class _ extends Error{constructor(e,a){const i=F[e];if(!i)throw new Error(`Unknown error code: ${e}`);super(a||i.message_template);d(this,"code");d(this,"status");d(this,"category");this.name=this.constructor.name,this.code=e,this.status=i.status,this.category=i.category}}class w extends _{constructor(e){super("INVALID_INPUT","The request contains invalid data");d(this,"validationErrors");this.validationErrors=e}}class U extends _{constructor(t){const e=`${t.toUpperCase()}_NOT_FOUND`;super(e)}}class k extends _{constructor(){super("AUTHENTICATION_REQUIRED")}}class C extends _{constructor(){super("INSUFFICIENT_PERMISSIONS")}}class L extends _{constructor(t){super("INTERNAL_SERVER_ERROR",t||"Database operation failed")}}const m=(s,t,e)=>{if(s instanceof _){const a=F[s.code],i={type:a.documentation_url||`https://docs.trainstation-dashboard.com/errors/${s.code.toLowerCase()}`,title:a.title,status:s.status,detail:s.message,instance:e||`/api/v1/request/${t}`,timestamp:new Date().toISOString(),request_id:t};return s instanceof w&&(i.errors=s.validationErrors),i}return{type:"https://docs.trainstation-dashboard.com/errors/internal-server-error",title:"Internal Server Error",status:500,detail:"An unexpected error occurred",instance:e||`/api/v1/request/${t}`,timestamp:new Date().toISOString(),request_id:t}},H=(s,t,e,a)=>({field:s,code:t,message:e,value:a});var v=(s=>(s.SUPER_ADMIN="super_admin",s.ADMIN="admin",s.MANAGER="manager",s.STAFF="staff",s.CUSTOMER="customer",s.ARTIST="artist",s.VENDOR="vendor",s))(v||{});const X=async s=>{try{if(s.split(".").length!==3)throw new Error("Invalid token format");return{sub:"user-123",iss:"trainstation-dashboard",aud:"trainstation-api",exp:Math.floor(Date.now()/1e3)+3600,iat:Math.floor(Date.now()/1e3),jti:`jwt-${Date.now()}`,role:"manager",permissions:["event:read","event:create"],venue_access:["venue-1","venue-2"],session_id:"session-123"}}catch{throw new k}},q=async s=>`hash_${s.substring(0,10)}`,p=class p{constructor(){d(this,"apiKeys",new Map);d(this,"sessions",new Map)}static getInstance(){return p.instance||(p.instance=new p),p.instance}async validateToken(t){try{const e=await X(t);return e.exp<Date.now()/1e3||!await this.validateSession(e.session_id)?null:e}catch{return null}}async validateApiKey(t){try{const e=await q(t),a=this.apiKeys.get(e);return!a||!a.is_active||a.expires_at&&new Date(a.expires_at)<new Date?null:(a.last_used_at=new Date().toISOString(),this.apiKeys.set(e,a),a)}catch{return null}}async validateSession(t){const e=this.sessions.get(t);return e?new Date(e.expires_at)>new Date:!1}async revokeSession(t){this.sessions.delete(t)}async createApiKey(t,e,a){const i=`tsd_${Date.now()}_${Math.random().toString(36).substring(2)}`,n=await q(i),o={id:`api_${Date.now()}`,name:t,key_hash:n,permissions:e,rate_limit:{requests_per_minute:1e3,requests_per_hour:1e4},created_at:new Date().toISOString(),is_active:!0,...a};return this.apiKeys.set(n,o),{key:i,apiKey:o}}async revokeApiKey(t){const e=this.apiKeys.get(t);e&&(e.is_active=!1,this.apiKeys.set(t,e))}async validateRoles(t,e){return!e.includes(t)&&t!=="super_admin"?{error:new Response(JSON.stringify({type:"https://docs.trainstation-dashboard.com/errors/insufficient-permissions",title:"Insufficient Permissions",status:403,detail:`User role '${t}' does not have access to this resource`,instance:"/api/auth/validate",timestamp:new Date().toISOString()}),{status:403,headers:{"Content-Type":"application/problem+json"}})}:{error:null}}async validatePermissions(t,e){return e.every(i=>t.includes(i)||t.includes("*"))?{error:null}:{error:new Response(JSON.stringify({type:"https://docs.trainstation-dashboard.com/errors/insufficient-permissions",title:"Insufficient Permissions",status:403,detail:"User does not have the required permissions for this action",instance:"/api/auth/validate",timestamp:new Date().toISOString(),extensions:{required:e,provided:t}}),{status:403,headers:{"Content-Type":"application/problem+json"}})}}};d(p,"instance");let T=p;class j{constructor(){d(this,"hits",new Map)}async increment(t,e){const a=Date.now(),i=a+e,n=this.hits.get(t);if(!n||a>n.resetTime){const o={count:1,resetTime:i};return this.hits.set(t,o),o}return n.count++,this.hits.set(t,n),n}async get(t){const e=this.hits.get(t);if(e&&Date.now()>e.resetTime){this.hits.delete(t);return}return e}async reset(t){this.hits.delete(t)}cleanup(){const t=Date.now();for(const[e,a]of this.hits.entries())t>a.resetTime&&this.hits.delete(e)}}const V=new j;setInterval(()=>V.cleanup(),5*60*1e3);class z{constructor(t,e={apiKeys:[],ipAddresses:[],userRoles:[]}){d(this,"config");d(this,"bypass");this.config={standardHeaders:!0,legacyHeaders:!1,message:"Too many requests, please try again later.",...t},this.bypass=e}async check(t){if(await this.shouldBypass(t))return{allowed:!0,info:{limit:1/0,remaining:1/0,reset:0},headers:{}};const e=await this.config.keyGenerator(t),a=await V.increment(e,this.config.windowMs),i=Math.max(0,this.config.maxRequests-a.count),n=Math.ceil(a.resetTime/1e3),o={limit:this.config.maxRequests,remaining:i,reset:n},u=this.buildHeaders(o);return a.count>this.config.maxRequests?(o.retryAfter=Math.ceil((a.resetTime-Date.now())/1e3),u["Retry-After"]=o.retryAfter.toString(),{allowed:!1,info:o,headers:u}):{allowed:!0,info:o,headers:u}}async shouldBypass(t){const e=t.headers.get("X-API-Key");if(e&&this.bypass.apiKeys.includes(e))return!0;const a=this.getClientIp(t);return!!this.bypass.ipAddresses.includes(a)}getClientIp(t){const e=["x-forwarded-for","x-real-ip","x-client-ip","cf-connecting-ip"];for(const a of e){const i=t.headers.get(a);if(i)return i.split(",")[0].trim()}return"unknown"}buildHeaders(t){const e={};return this.config.standardHeaders&&(e["X-RateLimit-Limit"]=t.limit.toString(),e["X-RateLimit-Remaining"]=t.remaining.toString(),e["X-RateLimit-Reset"]=t.reset.toString()),this.config.legacyHeaders&&(e["X-Rate-Limit-Limit"]=t.limit.toString(),e["X-Rate-Limit-Remaining"]=t.remaining.toString(),e["X-Rate-Limit-Reset"]=t.reset.toString()),e}}class ee{constructor(){d(this,"auth");d(this,"rateLimiter");this.auth=new T,this.rateLimiter=new z}async executeQuery(t,e,a="read"){const i=Date.now(),n=crypto.randomUUID();try{const{data:{session:o}}=await R.auth.getSession();if(!o)return m(new k("Authentication required. Please log in."),n);if(t.requiredRole){const A=await this.getUserRole(o.user.id);if((await this.auth.validateRoles(A,[t.requiredRole])).error)return m(new C("Insufficient permissions for this operation"),n)}if(t.rateLimitKey&&!(await this.rateLimiter.checkLimit(o.user.id,t.rateLimitKey)).allowed)return m(new w("Rate limit exceeded. Please try again later."),n);const{data:u,error:D}=await e();if(D)return this.handleSupabaseError(D,n);if(!u)return m(new U("Resource not found"),n);const x=Date.now()-i;return t.enableLogging&&console.log(`[SupabaseAdapter] ${a.toUpperCase()} ${t.tableName}`,{requestId:n,duration:`${x}ms`,userId:o.user.id,success:!0}),{success:!0,data:u,meta:{requestId:n,duration:x,source:"supabase",timestamp:new Date().toISOString()}}}catch(o){const u=Date.now()-i;return t.enableLogging&&console.error(`[SupabaseAdapter] Error in ${t.tableName}`,{requestId:n,duration:`${u}ms`,error:o instanceof Error?o.message:"Unknown error"}),{success:!1,error:m(o,n),meta:{requestId:n,duration:u,source:"supabase",timestamp:new Date().toISOString()}}}}buildQuery(t,e={}){let a=R.from(t);return e.select?a=a.select(e.select):a=a.select("*"),e.filters&&Object.entries(e.filters).forEach(([i,n])=>{n!=null&&(a=a.eq(i,n))}),e.orderBy&&(a=a.order(e.orderBy.column,{ascending:e.orderBy.ascending!==!1})),e.limit&&(a=a.limit(e.limit)),e.offset&&(a=a.range(e.offset,e.offset+(e.limit||50)-1)),a}toCamelCase(t){const e={};return Object.entries(t).forEach(([a,i])=>{const n=a.replace(/_([a-z])/g,(o,u)=>u.toUpperCase());e[n]=i}),e}toSnakeCase(t){const e={};return Object.entries(t).forEach(([a,i])=>{const n=a.replace(/[A-Z]/g,o=>`_${o.toLowerCase()}`);e[n]=i}),e}handleSupabaseError(t,e){if(typeof t=="object"&&t!==null){const a=t;switch(a.code){case"PGRST116":return m(new U("Resource not found"),e);case"23505":return m(new w("Duplicate entry. This resource already exists."),e);case"23503":return m(new w("Referenced resource does not exist."),e);case"42501":return m(new C("Insufficient database permissions"),e);default:return m(new L(a.message||"Database operation failed"),e)}}return m(new L("An unexpected database error occurred"),e)}async getUserRole(t){try{const{data:e}=await R.from("user_profiles").select("role").eq("id",t).single();return(e==null?void 0:e.role)||v.USER}catch{return v.USER}}}const l=r().uuid("Invalid UUID format"),N=r().email("Invalid email format"),I=r().regex(/^\+?[1-9]\d{1,14}$/,"Invalid phone number format"),E=r().datetime("Invalid ISO datetime format"),f=r().url("Invalid URL format"),B=c({page:O.number().int().min(1,"Page must be at least 1").default(1),per_page:O.number().int().min(1).max(100,"Per page must be between 1 and 100").default(20),sort:r().optional(),order:y(["asc","desc"]).default("asc")});c({id:l.optional(),name:r().min(1,"Name is required").max(255,"Name must be less than 255 characters"),description:r().optional(),address:r().min(1,"Address is required"),city:r().min(1,"City is required"),state:r().min(2,"State must be at least 2 characters").max(50),zip_code:r().regex(/^\d{5}(-\d{4})?$/,"Invalid ZIP code format"),country:r().min(2,"Country must be at least 2 characters").max(2,"Country must be 2 characters").default("US"),capacity:h().int().min(1,"Capacity must be at least 1"),phone:I.optional(),email:N.optional(),website:f.optional(),timezone:r().default("America/New_York"),is_active:g().default(!0)});c({id:l.optional(),name:r().min(1,"Name is required").max(255,"Name must be less than 255 characters"),stage_name:r().max(255,"Stage name must be less than 255 characters").optional(),genre:r().max(100,"Genre must be less than 100 characters").optional(),bio:r().optional(),email:N.optional(),phone:I.optional(),website:f.optional(),spotify_url:f.optional(),instagram_url:f.optional(),facebook_url:f.optional(),twitter_url:f.optional(),booking_fee:h().min(0,"Booking fee must be non-negative").optional(),rider_requirements:r().optional(),is_active:g().default(!0)});c({id:l.optional(),title:r().min(1,"Title is required").max(255,"Title must be less than 255 characters"),description:r().optional(),venue_id:l,artist_id:l.optional(),start_date:E,end_date:E.optional(),doors_time:r().regex(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format (HH:MM)").optional(),show_time:r().regex(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/,"Invalid time format (HH:MM)").optional(),ticket_price:h().min(0,"Ticket price must be non-negative").optional(),capacity:h().int().min(1,"Capacity must be at least 1"),age_restriction:y(["all_ages","18+","21+"]).default("all_ages"),status:y(["draft","published","cancelled","completed"]).default("draft"),is_featured:g().default(!1)}).refine(s=>!s.end_date||new Date(s.end_date)>=new Date(s.start_date),{message:"End date must be after start date",path:["end_date"]});c({id:l.optional(),first_name:r().min(1,"First name is required").max(100,"First name must be less than 100 characters"),last_name:r().min(1,"Last name is required").max(100,"Last name must be less than 100 characters"),email:N,phone:I.optional(),date_of_birth:r().date("Invalid date format (YYYY-MM-DD)").optional(),address:r().optional(),city:r().optional(),state:r().max(50).optional(),zip_code:r().regex(/^\d{5}(-\d{4})?$/,"Invalid ZIP code format").optional(),emergency_contact_name:r().max(200).optional(),emergency_contact_phone:I.optional(),preferences:b(S()).optional(),marketing_consent:g().default(!1),is_active:g().default(!0)});c({id:l.optional(),event_id:l,customer_id:l.optional(),ticket_type:y(["general","vip","early_bird","group"]).default("general"),price:h().min(0,"Price must be non-negative"),quantity:h().int().min(1,"Quantity must be at least 1"),purchase_date:E.optional(),status:y(["reserved","purchased","cancelled","refunded"]).default("reserved"),notes:r().optional()});c({q:r().min(1,"Search query must not be empty").optional(),filters:b(S()).optional(),...B.shape});c({start_date:E.optional(),end_date:E.optional()}).refine(s=>!s.start_date||!s.end_date||new Date(s.end_date)>=new Date(s.start_date),{message:"End date must be after start date",path:["end_date"]});c({filename:r().min(1,"Filename is required"),content_type:r().min(1,"Content type is required"),size:h().int().min(1,"File size must be greater than 0").max(10*1024*1024,"File size must be less than 10MB"),content:r().min(1,"File content is required")});c({venue_id:l,settings:b(S()),updated_by:l});c({id:l});c({slug:r().min(1,"Slug is required")});c({ids:M(l).min(1,"At least one ID is required").max(100,"Maximum 100 IDs allowed")});c({updates:M(c({id:l,data:b(S())})).min(1,"At least one update is required").max(100,"Maximum 100 updates allowed")});const Q=(s,t)=>{try{return{success:!0,data:s.parse(t)}}catch(e){if(e instanceof K){const a=e.errors.map(i=>H(i.path.join("."),i.code,i.message,i.path.length>0?Y(t,i.path):t));return{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/validation-error",title:"Validation Error",status:400,detail:"Request data validation failed",instance:"/validation",timestamp:new Date().toISOString(),errors:a}}}return{success:!1,error:{type:"https://docs.trainstation-dashboard.com/errors/validation-error",title:"Validation Error",status:400,detail:"Unknown validation error",instance:"/validation",timestamp:new Date().toISOString()}}}},te=(s,t)=>Q(s,t),Y=(s,t)=>t.reduce((e,a)=>e==null?void 0:e[a],s);export{ee as S,v as U,te as a,Q as v};
